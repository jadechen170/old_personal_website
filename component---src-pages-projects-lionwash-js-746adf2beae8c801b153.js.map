{"version":3,"sources":["webpack:///./src/components/projecttext.js","webpack:///./src/components/projectnav.js","webpack:///./src/pages/projects/lionwash.js"],"names":["Container","styled","div","Title","h1","Type","p","Tools","ProjectText","props","type","title","tools","body1","body2","href","url","link","Wrapper","theme","mobile","TabContainer","Dot","dustPink","StyledLink","Link","active","lightGray","ProjectNav","tabs","useStaticQuery","site","siteMetadata","projectLinks","map","projectLink","index","to","key","children","Img1","Img","tablet","Img2","FilledBox","grayBlue","OutlineBox","cream","ReverseBox","Box","ChallengeTitle","h2","Line","phone","ChallengeText","RowContainer","DesignSection","DesignTitle","DesignText","DesignLeft","DesignRight","DesignDot","Screen1","Screen2","ShoptakiPage","data","fluid","img1","childImageSharp","img2","screen1","screen2"],"mappings":"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","file":"component---src-pages-projects-lionwash-js-746adf2beae8c801b153.js","sourcesContent":["import styled from \"styled-components\"\nimport React from \"react\"\n\nconst Container = styled.div`\n    font-family: \"Poppins Light\";\n    margin-bottom: 2rem;\n`\nconst Title = styled.h1`\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n`\nconst Type = styled.p`\n    margin: 0rem;\n`\nconst Tools = styled.p`\n    margin-bottom: 2.5rem;\n`\nconst ProjectText = (props) => {\n\n  return (\n    <Container>\n        <Type>{props.type}</Type>\n        <Title>{props.title}</Title>\n        <Tools>{props.tools}</Tools>\n        <p>{props.body1}</p>\n        <p>{props.body2}</p>\n        <a href={props.url}>{props.link}</a>\n    </Container>\n  )\n}\n\nexport default ProjectText","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { theme } from \"../theme/GlobalStyles\"\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${theme.mobile}) {\n        flex-direction: column;\n    }\n`\nconst Container = styled.div`\n  margin: 0;\n  padding: 3rem 7rem;\n  width: 80%;\n  display: inline;\n  @media (max-width: ${theme.mobile}) {\n    padding: 3rem 0.5rem;\n    align-self: center;\n  }\n\n`\nconst TabContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding-left: 3rem;\n    justify-content: center;\n    height: 70vh;\n    @media (max-width: ${theme.mobile}) {\n        display: inline;\n        height: auto;\n        text-align: center;\n        padding: 1.5rem;\n    }\n`\nconst Dot = styled.div`\n    display: none;\n    @media (max-width: ${theme.mobile}) {\n        display: inline-block;\n        height: 5px;\n        width: 5px;\n        background-color: ${theme.dustPink};\n        border-radius: 50%;\n        margin: 5px 5px 3px 5px;\n        &:last-child {\n            display: none;\n        }\n    }\n`\nconst StyledLink = styled(Link)`\n    color: ${props => props.active === props.title ? theme.dustPink : theme.lightGray};\n    font-family: ${props => props.active === props.title ? \"Poppins SemiBold\" : \"inherit\"};\n`\n\nconst ProjectNav = (props) => {\n  const data = useStaticQuery(graphql`\n    query ProjectQuery {\n        site {\n            siteMetadata {\n                title\n                projectLinks {\n                    title\n                    link\n                }\n            }\n        }\n    }\n `)\n\n    const tabs = data.site.siteMetadata.projectLinks.map((projectLink, index) => (\n        <>\n            <StyledLink active={props.active} title={projectLink.title} to={projectLink.link} key={index}>\n                {projectLink.title}\n            </StyledLink>\n            <Dot/>\n        </>\n    ));\n\n  return (\n    <Wrapper>\n        <TabContainer>\n            {tabs}\n        </TabContainer>\n        <Container>\n            {props.children}\n        </Container>\n    </Wrapper>\n  )\n}\n\nexport default ProjectNav\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { theme } from \"../../theme/GlobalStyles\"\nimport ProjectNav from \"../../components/projectnav\"\nimport ProjectText from \"../../components/projecttext\"\n\n\nconst Img1 = styled(Img)`\n    width: 60%;\n    // margin-left: 15rem;\n    @media (max-width: ${theme.tablet}) {\n        width: 90%;\n        margin-left: 0;\n    }\n`\nconst Img2 = styled(Img)`\n    width: 60%;\n    // margin: 6.5rem 0 0 0rem;\n    @media (max-width: ${theme.tablet}) {\n        width: 90%;\n        margin: 4rem 0 0 0;\n    }   \n`\nconst FilledBox = styled.div`\n    width: 40%;\n    height: 15rem;\n    background-color: ${theme.grayBlue};   \n    margin: 1rem;\n    @media (max-width: ${theme.tablet}) {\n        padding: 1rem;\n        margin: 1rem 0 0 0;\n        width: 90%;\n        height: auto;\n    } \n`\nconst OutlineBox = styled.div`\n    width: 96%;\n    height: 14.5rem;\n    margin: 5px;\n    padding: 5%;\n    border: 1px solid ${theme.cream};\n    p {\n        color: ${theme.cream};\n    }\n    @media (max-width: ${theme.tablet}) {\n        height: auto;\n    } \n`\nconst ReverseBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${theme.tablet}) {\n        flex-direction: column-reverse;\n    } \n`\nconst Box = styled.div`\n    padding-top: 3rem;\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${theme.tablet}) {\n        flex-direction: column;\n    }\n`\nconst ChallengeTitle = styled.h2`\n    color: ${theme.grayBlue};\n    margin-top: 10rem;\n    font-size: 3rem;\n    @media (max-width: ${theme.tablet}) {\n        font-size: 2.5rem;\n        margin-top: 5rem;\n    } \n`  \nconst Dot = styled.div`\n    display: inline-block;\n    height: 10px;\n    width: 10px;\n    background-color: ${theme.grayBlue};\n    border-radius: 50%; \n` \nconst Line = styled.div`\n    width: 1px;\n    height: 12rem;\n    background-color: ${theme.grayBlue};\n    margin: 10px 0 0 4px;\n    @media (max-width: ${theme.phone}) {\n        height: 35rem;\n    } \n`   \nconst ChallengeText = styled.div`\n    padding-left: 2rem;\n`\nconst RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`\nconst DesignSection = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-top: 6rem;\n`\nconst DesignTitle = styled.h2`\n    color: ${theme.grayBlue};\n    font-size: 3rem;\n    display: flex;\n    justify-content: center;\n    @media (max-width: ${theme.tablet}) {\n       font-size: 2rem;\n    } \n`\nconst DesignText = styled.p`\n    text-align: center;\n    padding: 0 3rem 1.5rem 3rem;\n    @media (max-width: ${theme.tablet}) {\n        padding: 0.5rem;\n    } \n`\nconst DesignLeft = styled.div`\n    width: 45%;\n    justify-content: flex-end;\n    p {\n        text-align: right;\n    }\n`\nconst DesignRight = styled.div`\n    width: 45%;\n    padding-right: 2rem;\n    @media (max-width: ${theme.tablet}) {\n        padding-right: 0;\n    } \n`\nconst DesignDot = styled(Dot)`\n    margin: 50px;\n    @media (max-width: ${theme.tablet}) {\n        margin: 10px;\n    } \n`\nconst Screen1 = styled(Img)`\n    width: 50%;\n    margin-left: 50%;\n    @media (max-width: ${theme.tablet}) {\n        width: 90%;\n        margin-left: 0;\n    } \n`\nconst Screen2 = styled(Img)`\n    width: 56%;\n    @media (max-width: ${theme.tablet}) {\n        width: 90%;\n    } \n`\nconst ShoptakiPage = () => {\n  const data = useStaticQuery(graphql`\n        query {\n            img1: file(relativePath: { eq: \"lionwash/overview.png\" }) {\n                ...image\n            }\n            img2: file(relativePath: { eq: \"lionwash/onboarding.png\" }) {\n                ...image\n            }\n            screen1: file(relativePath: { eq: \"lionwash/washer-screen.png\" }) {\n                ...image\n            }\n            screen2: file(relativePath: { eq: \"lionwash/timer-screen.png\" }) {\n                ...image\n            }\n        }\n    `)\n\n  return (\n    <Layout>\n      <SEO title=\"LionWash\" />\n      <ProjectNav active=\"LionWash\">\n          <ProjectText\n            type=\"MOBILE DEV & UI/UX DESIGN:\"\n            title=\"LIONWASH\"\n            tools=\"FIGMA, REACT NATIVE, FIREBASE\"\n            >\n          </ProjectText>\n\n          <ReverseBox>\n            <FilledBox>\n                <OutlineBox>\n                    <p>LionWash is a mobile app that improves the Columbia residential experience by allowing students to track laundry machine availability.</p>\n                </OutlineBox>\n            </FilledBox>\n            <Img1 fluid={data.img1.childImageSharp.fluid} />\n          </ReverseBox>\n          <Box>\n            <Img2 fluid={data.img2.childImageSharp.fluid} />\n            <FilledBox>\n                <OutlineBox>\n                    <p>Designed on Figma in collaboration with Hailey Shi, a cool designer and cool friend.</p>\n                    <p>I am currently developing with React Native.</p>\n                </OutlineBox>\n            </FilledBox>\n          </Box>\n\n          <ChallengeTitle>The Challenge</ChallengeTitle>\n          <RowContainer>\n            <div>\n                <Dot/>\n                <Line />\n            </div>\n            <ChallengeText>\n                <p> As Columbia students living on campus, we noticed that the current laundry system isn’t well designed to adequately address problems that may arise from a student’s perspective. </p>\n                <p>When finished laundry is neglected, other students will either:</p>\n                <ol>\n                <li> Continue waiting for another available machine, or</li>\n                <li> Replace the clean load with their unwashed load without waiting for the previous user to retrieve it</li>\n                </ol>\n                <p>This cycle wastes time and becomes an incovenience for others. How might we improve and expedite the laundry process to ensure an efficient and unburdensome experience for busy college students?</p>\n            </ChallengeText>\n          </RowContainer>\n\n          <DesignSection>\n             <DesignTitle>Our Design</DesignTitle>\n             <DesignText>Laundry should be a simple and hassle-free process. We’ve designed LionWash around two key features to allow students to easily track available machines and laundry process:</DesignText>\n             <RowContainer>\n                <DesignLeft>\n                    <p>A real-time database tracks available washers and dryers and allows students to report broken machines. </p>\n                    <Screen1 fluid={data.screen1.childImageSharp.fluid} />\n                </DesignLeft>\n                <DesignDot />\n                <DesignRight>\n                    <p>A built-in timer monitors the progress of a laundy cycle, and features a subtle, custom-designed animation.</p>\n                    <Screen2 fluid={data.screen2.childImageSharp.fluid} />\n                </DesignRight>\n             </RowContainer>\n          </DesignSection>\n          \n      </ProjectNav>\n    </Layout>\n  )\n}\nexport default ShoptakiPage"],"sourceRoot":""}