{"version":3,"sources":["webpack:///./src/pages/projects/shoptaki.js","webpack:///./src/components/projecttext.js","webpack:///./src/components/projectnav.js"],"names":["Img1","styled","Img","theme","mobile","Img2","ShoptakiPage","data","useStaticQuery","title","active","type","tools","body1","link","url","fluid","img1","childImageSharp","img2","Container","div","Title","h1","Type","p","Tools","ProjectText","props","body2","href","Wrapper","TabContainer","Dot","dustPink","StyledLink","Link","lightGray","ProjectNav","tabs","site","siteMetadata","projectLinks","map","projectLink","index","to","key","children"],"mappings":"8FAAA,yIAWMA,EAAOC,YAAOC,KAAV,iEAAGD,CAAH,iFAIeE,IAAMC,QAIzBC,EAAOJ,YAAOC,KAAV,iEAAGD,CAAH,iFAIeE,IAAMC,QAkChBE,UA9BM,WACjB,IAAMC,EAAOC,yBAAe,cAW9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,CAAYC,OAAO,YACf,kBAAC,IAAD,CACEC,KAAK,UACLF,MAAM,WACNG,MAAM,4BACNC,MAAM,kQACNC,KAAK,gBACLC,IAAI,8BAEN,kBAACf,EAAD,CAAMgB,MAAOT,EAAKU,KAAKC,gBAAgBF,QACvC,kBAACX,EAAD,CAAMW,MAAOT,EAAKY,KAAKD,gBAAgBF,Y,kCCpDjD,qCAGMI,EAAYnB,IAAOoB,IAAV,yEAAGpB,CAAH,qDAITqB,EAAQrB,IAAOsB,GAAV,qEAAGtB,CAAH,0CAILuB,EAAOvB,IAAOwB,EAAV,oEAAGxB,CAAH,kBAGJyB,EAAQzB,IAAOwB,EAAV,qEAAGxB,CAAH,2BAiBI0B,IAdK,SAACC,GAEnB,OACE,kBAACR,EAAD,KACI,kBAACI,EAAD,KAAOI,EAAMjB,MACb,kBAACW,EAAD,KAAQM,EAAMnB,OACd,kBAACiB,EAAD,KAAQE,EAAMhB,OACd,2BAAIgB,EAAMf,OACV,2BAAIe,EAAMC,OACV,uBAAGC,KAAMF,EAAMb,KAAMa,EAAMd,S,kCC1BnC,6DAMMiB,EAAU9B,IAAOoB,IAAV,0EAAGpB,CAAH,mFAGYE,IAAMC,QAIzBgB,EAAYnB,IAAOoB,IAAV,4EAAGpB,CAAH,uHAKQE,IAAMC,QAMvB4B,EAAe/B,IAAOoB,IAAV,+EAAGpB,CAAH,iLAMOE,IAAMC,QAOzB6B,EAAMhC,IAAOoB,IAAV,sEAAGpB,CAAH,6KAEgBE,IAAMC,OAIHD,IAAM+B,UAQ5BC,EAAalC,YAAOmC,QAAV,6EAAGnC,CAAH,gCACH,SAAA2B,GAAK,OAAIA,EAAMlB,SAAWkB,EAAMnB,MAAQN,IAAM+B,SAAW/B,IAAMkC,aACzD,SAAAT,GAAK,OAAIA,EAAMlB,SAAWkB,EAAMnB,MAAQ,mBAAqB,aAuCjE6B,IApCI,SAACV,GAClB,IAcQW,EAdK/B,yBAAe,cAcRgC,KAAKC,aAAaC,aAAaC,KAAI,SAACC,EAAaC,GAAd,OACjD,oCACI,kBAACV,EAAD,CAAYzB,OAAQkB,EAAMlB,OAAQD,MAAOmC,EAAYnC,MAAOqC,GAAIF,EAAY9B,KAAMiC,IAAKF,GAClFD,EAAYnC,OAEjB,kBAACwB,EAAD,UAIV,OACE,kBAACF,EAAD,KACI,kBAACC,EAAD,KACKO,GAEL,kBAACnB,EAAD,KACKQ,EAAMoB","file":"component---src-pages-projects-shoptaki-js-aff2ca9f795e6d9e8768.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport { theme } from \"../../theme/GlobalStyles\"\nimport ProjectNav from \"../../components/projectnav\"\nimport ProjectText from \"../../components/projecttext\"\n\nconst Img1 = styled(Img)`\n    width: 45%;\n    display: inline-block;\n    margin: 1%;\n    @media (max-width: ${theme.mobile}) {\n        width: 80vw;\n    }\n`\nconst Img2 = styled(Img)`\n    width: 45%;  \n    display: inline-block;\n    margin: 1%;\n    @media (max-width: ${theme.mobile}) {\n        width: 80vw;\n    }  \n`\nconst ShoptakiPage = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            img1: file(relativePath: { eq: \"shoptaki/home.png\" }) {\n                ...image\n            }\n            img2: file(relativePath: { eq: \"shoptaki/nodes.png\" }) {\n                ...image\n            }\n        }\n    `)\n\n  return (\n    <Layout>\n      <SEO title=\"Shoptaki\" />\n      <ProjectNav active=\"Shoptaki\">\n          <ProjectText\n            type=\"WEB DEV\"\n            title=\"SHOPTAKI\"\n            tools=\"REACTJS, GATSBY, ADOBE XD\"\n            body1=\"I led a team of 7 interns in developing a brand new website for Shoptaki, a start-up fintech company. Multiple components are made interactive or animated with ThreeJS. For example, the globe on the homepage reacts to user input and can spin when dragged.\"\n            link=\"Visit Website\"\n            url=\"https://www.shoptaki.com/\">\n          </ProjectText>\n          <Img1 fluid={data.img1.childImageSharp.fluid} />\n          <Img2 fluid={data.img2.childImageSharp.fluid} />\n      </ProjectNav>\n    </Layout>\n  )\n}\nexport default ShoptakiPage","import styled from \"styled-components\"\nimport React from \"react\"\n\nconst Container = styled.div`\n    font-family: \"Poppins Light\";\n    margin-bottom: 2rem;\n`\nconst Title = styled.h1`\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n`\nconst Type = styled.p`\n    margin: 0rem;\n`\nconst Tools = styled.p`\n    margin-bottom: 2.5rem;\n`\nconst ProjectText = (props) => {\n\n  return (\n    <Container>\n        <Type>{props.type}</Type>\n        <Title>{props.title}</Title>\n        <Tools>{props.tools}</Tools>\n        <p>{props.body1}</p>\n        <p>{props.body2}</p>\n        <a href={props.url}>{props.link}</a>\n    </Container>\n  )\n}\n\nexport default ProjectText","import { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { theme } from \"../theme/GlobalStyles\"\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${theme.mobile}) {\n        flex-direction: column;\n    }\n`\nconst Container = styled.div`\n  margin: 0;\n  padding: 3rem 7rem;\n  width: 80%;\n  display: inline;\n  @media (max-width: ${theme.mobile}) {\n    padding: 3rem 0.5rem;\n    align-self: center;\n  }\n\n`\nconst TabContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding-left: 3rem;\n    justify-content: center;\n    height: 70vh;\n    @media (max-width: ${theme.mobile}) {\n        display: inline;\n        height: auto;\n        text-align: center;\n        padding: 1.5rem;\n    }\n`\nconst Dot = styled.div`\n    display: none;\n    @media (max-width: ${theme.mobile}) {\n        display: inline-block;\n        height: 5px;\n        width: 5px;\n        background-color: ${theme.dustPink};\n        border-radius: 50%;\n        margin: 5px 5px 3px 5px;\n        &:last-child {\n            display: none;\n        }\n    }\n`\nconst StyledLink = styled(Link)`\n    color: ${props => props.active === props.title ? theme.dustPink : theme.lightGray};\n    font-family: ${props => props.active === props.title ? \"Poppins SemiBold\" : \"inherit\"};\n`\n\nconst ProjectNav = (props) => {\n  const data = useStaticQuery(graphql`\n    query ProjectQuery {\n        site {\n            siteMetadata {\n                title\n                projectLinks {\n                    title\n                    link\n                }\n            }\n        }\n    }\n `)\n\n    const tabs = data.site.siteMetadata.projectLinks.map((projectLink, index) => (\n        <>\n            <StyledLink active={props.active} title={projectLink.title} to={projectLink.link} key={index}>\n                {projectLink.title}\n            </StyledLink>\n            <Dot/>\n        </>\n    ));\n\n  return (\n    <Wrapper>\n        <TabContainer>\n            {tabs}\n        </TabContainer>\n        <Container>\n            {props.children}\n        </Container>\n    </Wrapper>\n  )\n}\n\nexport default ProjectNav\n"],"sourceRoot":""}